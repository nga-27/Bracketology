"""bracketology.py

    AI/ML BRACKET GENERATOR - Main file to create autogenerated NCAA Tournament Bracket
"""
from bracket.data_framer import dataframe_importer, heuristic_dataframe_importer
from bracket.json_converter import convert_from_json_to_bracket_list, generate_json_bracket
from bracket.bracket_builder import build_dag, flat_bracket_creator
from engine.engine import populate_bracket

###################################################################
##      USER-DEFINED DATA CONFIGURED BELOW                       ##
###################################################################

#  Optional attributes and attribute files listed here. Examples:
###################################################################
# Examples:
# attribute_files = ['confRecords2018.csv', 'overallRecords2018.csv']
###################################################################

attribute_files = []

# Optional heuristics listed here
heuristics = ["randOnRank.csv", "template.csv"]


###################################################################
###################################################################
###################################################################
##      DO NOT EDIT BELOW THIS SECTION!!! (Internal-use only)    ##
###################################################################
###################################################################
###################################################################

print("\r\nStarting...\r\n")

# Frame any attributes
attribute_dict = dataframe_importer(attribute_files)

# Frame any heuristics (name of heuristic is derived from file name)
heuristic_dict = heuristic_dataframe_importer(heuristics)

# Generate the bracket JSON file with optional attributes
json_file = generate_json_bracket(
    "bracket_1.csv",
    "bracket_schema.json",
    attribute_dict,
    heuristic_dict
)

# Bracket conversion and building
bracket = convert_from_json_to_bracket_list(json_file)
flat_bracket = flat_bracket_creator(bracket)

# Algorithms operate on flatBrack [and 'jsonFile' if 'atts' is not empty] HERE
filled_bracket = populate_bracket(flat_bracket, json_file)

# Output the DAG bracket
build_dag(filled_bracket)
